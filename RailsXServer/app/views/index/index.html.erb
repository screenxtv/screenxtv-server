<%= javascript_include_tag "top" %>
<script>
terminalList=[<%= screens.map(&:to_json).join(",").html_safe %>];
</script>
<script>
$(function(){
	var first=terminalList[0];
	if(first&&first.casting){
		var embed=$("<iframe/>");
		var embed=
		embed.attr("src","/embed/"+first.url+"?link=true");
		$("#demo").append(embed);
	}
	var main=$('#main');
	var tiles=[];
	for(var i=0;i<terminalList.length;i++){
		var data=terminalList[i]
		var vt100=data.vt100;
		var div=document.createElement('div');
		div.className='terminal';
		main.append(div);
		console.log(vt100)
		var terminal=new Terminal(div,vt100.W,vt100.H,Terminal.defaultColorMap[data.color]);
		terminal.vt100=new VT100(vt100);
		terminal.updateView();
		div.removeChild(div.firstChild);
		var title=document.createElement('a');
		console.log(data)
		title.href='/'+data.url;
		title.className='title'
		title.innerHTML="<div></div>"
		title.firstChild.textContent=data.title;
		div.appendChild(title);
		if(!data.casting)div.style.opacity=0.5;
		tiles.push(div);
	}
	while(tiles.length<4){
		var div=document.createElement("div");
		div.className='terminal dummy';
		main.append(div);
		tiles.push(div);
	}
	console.log(tiles[0])
	tompngTile('.terminal','#main',tiles[0].offsetWidth,24,24);
});

</script>

<style>
a.title{
	font-size:32px;
	color:white;
	text-shadow:0 0 10px black;
	text-decoration:none;
	text-align:center;
	position:absolute;left:0;top:0;width:100%;height:100%;
}
a.title div{
	position:absolute;left:0;bottom:0;width:100%;
	background:rgba(64,64,64,0.5);
}
.terminal{
	position:relative;
	font-size:16px;
	box-shadow:0 0 8px gray;
}
.terminal,.dummy{width:320px;height:192px;}
.terminal:hover{
	box-shadow:0 0 32px gray;
}
.dummy{
	box-shadow:0 0 8px rgba(127,127,127,0.2);
}
.dummy:hover{
	box-shadow:0 0 8px rgba(127,127,127,0.2);
}
#main{position:relative;margin:0;padding:0;}
iframe{
	border:none;
	width:100%;
	height:400px;
}
div.footer{
border-top:1px solid#eee;
text-align:right;
margin-top:20px;
padding:10px 20px;
font-size:14px;
color:gray;
}
div.footer a{color:#444}
div.footer span{margin-right:20px;}
div.whatis{
  margin:20px;
  text-align:left;
  display:inline-block;
  padding:5px 20px;
  box-shadow:0 0 4px silver;
}
div.description{
  font-size:20px;
  margin-bottom:20px;
}
div.howto{font-size:16px;}
div.code{
  font-family:Osaka-Mono,monospace;
  padding:0 5px;margin:0;
  height:20px;
  line-height:20px;
  background:#eee;
}
</style>
<script>
function textselect(e){
  var range=document.createRange();
  window.eee=e;
  range.setStart(e,0);
  range.setEnd(e,1);
  var sel=getSelection();
  sel.removeAllRanges();
  sel.addRange(range);
}
</script>
<center>
<div class="whatis">
<% if 'ja' == request.env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}/).first %>
  <div class='description'>
    ScreenX TVを使えばあなたのターミナル画面を生中継できます。<br>
    勉強会の配信、講義、ペアプログラミングなどのシーンでご活用ください。<br>
  </div>
  <div class='howto'>
    次のコマンドを実行するか、<a href='https://github.com/tompng/screenxtv-gcc-client'>配信ツール</a>をインストールしてください。
    <div class='code' onclick='textselect(this)'>curl -s -L https://raw.github.com/yasulab/screenxtv-sandbox/master/run.sh | bash</div>
  </div>
<% else %>
  <div class='description'>
    ScreenX TV is the best way to broadcast your terminal in real time.<br>
    Show your live coding for a lecture, hackathon, or remote pair programming.<br>
  </div>
  <div class='howto'>
    Install <a href='https://github.com/tompng/screenxtv-gcc-client'>broadcasting tools</a>, or run this command:<br>
    <div class='code' onclick='textselect(this)'>curl -s -L https://raw.github.com/yasulab/screenxtv-sandbox/master/run.sh | bash</div>
  </div>
<% end %>
</div>
</center>

<center id='demo'></center>
<div id='main'></div>


<div class='footer'>
  <span class=contact>Contact:
    <a href='http://twitter.com/tompng'>@tompng</a>
    <a href='http://twitter.com/yasulab'>@yasulab</a>
  </span>
  Supported by <a href='http://qwik.jp/okinawarb/'>okinawa.rb</a>
</div>
